package design

import (
	. "github.com/goadesign/goa/design" // Use . imports to enable the DSL
	. "github.com/goadesign/goa/design/apidsl"
)

var _ = API("latex", func() { // API defines the microservice endpoint and
	Title("Secure Latex Compilation API")                           // other global properties. There should be one
	Description("An API for secure compilation of Latex documents") // and exactly one API definition appearing in
	Scheme("http")                                                  // the design.
	Host("localhost:8080")
	Produces("application/json") // Media types generated by the API
	Version("1.0.0")
	Origin("*", func() {
		Methods("GET", "POST", "OPTIONS")
		MaxAge(600)
		Expose("Cache-Control", "Content-Length", "Content-Type", "Date", "Expires", "Host", "Keep-Alive", "Last-Modified", "Location", "Server", "Status", "Strict-Transport-Security", "X-Requested-With", "Accept", "Origin", "X-File-Name")
		Credentials()
	})
})

var _ = Resource("latex", func() { // Resources group related API endpoints
	Action("upload", func() {
		Description("Route for uploading the Latex files")
		Routing(POST("/upload"))

		Response(OK, "application/json")
		Response("Not acceptable", func() {
			Description("Upload was not acceptable")
			Status(406)
			Media("application/json")
		})
	})

	Action("status", func() {
		Description("Actual compilation status")
		Routing(GET("/status/:uuid"))
		Params(func() {
			Param("uuid", String, "Job UUID")
		})
		Response(OK, "application/json")
		Response("Not found", func() {
			Description("UUID was not found")
			Status(404)
			Media("application/json")
		})
	})

	Action("download", func() {
		Description("Download route for compilation")
		Routing(GET("/download/:uuid"))
		Params(func() {
			Param("uuid", Integer, "Job UUID")
		})
		Response(OK)
		Response("Not found", func() {
			Description("Download was not found")
			Status(404)
			Media("application/json")
		})
		Response("Too much downloads", func() {
			Description("Compilation had to much downloads")
			Status(400)
			Media("application/json")
		})
	})
})

var LatexArchive = MediaType("application/vnd.texsec.archive", func() {
	Description("Latex file Archive")
	TypeName("LatexArchive")
	Attributes(func() {
		Attribute("uuid", String, "Archive UUID")
		Attribute("filename", String, "Archive filename")
		Attribute("uploaded_at", DateTime, "Upload timestamp")
		Required("uuid", "filename", "uploaded_at")
	})
	View("default", func() {
		Attribute("uuid")
		Attribute("filename")
		Attribute("uploaded_at")
	})
})
